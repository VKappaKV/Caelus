#pragma version 11
intcblock 1 0
bytecblock 0x00

// This TEAL was generated by TEALScript v0.105.5
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication()void
*abi_route_createApplication:
	// execute createApplication()void
	callsub createApplication
	intc 0 // 1
	return

// createApplication(): void
createApplication:
	proto 0 0

	// contracts\CaelusAdmin.algo.ts:32
	// this.totalAlgoStaked.value = 0
	pushbytes 0x746f74616c7374616b65 // "totalstake"
	intc 1 // 0
	app_global_put

	// contracts\CaelusAdmin.algo.ts:33
	// this.init_bsALGO.value = false
	pushbytes 0x696e69745f6273414c474f // "init_bsALGO"
	intc 1 // 0
	bytec 0 // 0x00
	intc 1 // 0
	uncover 2
	setbit
	app_global_put

	// contracts\CaelusAdmin.algo.ts:34
	// this.initializedPoolContract.value = false
	pushbytes 0x696e6974506f6f6c436f6e7472616374 // "initPoolContract"
	intc 1 // 0
	bytec 0 // 0x00
	intc 1 // 0
	uncover 2
	setbit
	app_global_put

	// contracts\CaelusAdmin.algo.ts:35
	// this.validatorPoolContractVersion.value = 0
	pushbytes 0x76616c696461746f72506f6f6c56657273696f6e // "validatorPoolVersion"
	intc 1 // 0
	app_global_put
	retsub

// mintRequest()void
*abi_route_mintRequest:
	// execute mintRequest()void
	callsub mintRequest
	intc 0 // 1
	return

// mintRequest(): void
mintRequest:
	proto 0 0
	retsub

// burnRequest()void
*abi_route_burnRequest:
	// execute burnRequest()void
	callsub burnRequest
	intc 0 // 1
	return

// burnRequest(): void
burnRequest:
	proto 0 0
	retsub

// bid(uint64)void
*abi_route_bid:
	// validatorAppID: uint64
	txna ApplicationArgs 1
	btoi

	// execute bid(uint64)void
	callsub bid
	intc 0 // 1
	return

// bid(validatorAppID: AppID): void
bid:
	proto 1 0
	retsub

// delegateStake(uint64)void
*abi_route_delegateStake:
	// amount: uint64
	txna ApplicationArgs 1
	btoi

	// execute delegateStake(uint64)void
	callsub delegateStake
	intc 0 // 1
	return

// delegateStake(amount: uint64): void
delegateStake:
	proto 1 0
	retsub

// snitch()void
*abi_route_snitch:
	// execute snitch()void
	callsub snitch
	intc 0 // 1
	return

// snitch(): void
snitch:
	proto 0 0
	retsub

// burnStake()void
*abi_route_burnStake:
	// execute burnStake()void
	callsub burnStake
	intc 0 // 1
	return

// burnStake(): void
burnStake:
	proto 0 0
	retsub

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x7c1974c7 // method "mintRequest()void"
	pushbytes 0x4f58c530 // method "burnRequest()void"
	pushbytes 0xeddfe598 // method "bid(uint64)void"
	pushbytes 0xe3aa9a90 // method "delegateStake(uint64)void"
	pushbytes 0xfd046173 // method "snitch()void"
	pushbytes 0x29625a82 // method "burnStake()void"
	txna ApplicationArgs 0
	match *abi_route_mintRequest *abi_route_burnRequest *abi_route_bid *abi_route_delegateStake *abi_route_snitch *abi_route_burnStake

	// this contract does not implement the given ABI method for call NoOp
	err