{
  "name": "CaelusValidatorPool",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "desc": "******************\nPublic Methods    *\n******************",
      "args": [
        {
          "name": "creatingContract",
          "type": "uint64"
        },
        {
          "name": "operatorAddress",
          "type": "address"
        },
        {
          "name": "contractVersion",
          "type": "uint64"
        },
        {
          "name": "xGovVotingAddress",
          "type": "address"
        },
        {
          "name": "vestID",
          "type": "uint64"
        },
        {
          "name": "stVestID",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "addToOperatorCommit",
      "desc": "Used by the node operator to add to his stake amount for the node",
      "args": [
        {
          "name": "commit",
          "type": "pay",
          "desc": "node operator stake commitment"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "removeFromOperatorCommit",
      "desc": "Used by the node operator to remove from his stake amount for the node",
      "args": [
        {
          "name": "claimRequest",
          "type": "uint64",
          "desc": "amount claimed by the node operator to be removed from the contract balance and subtracted from the operator_commit counter"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "performanceCheck",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "solveDelinquency",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "reportRewards",
      "args": [
        {
          "name": "block",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "issueBid",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "takeStakeRequest",
      "args": [
        {
          "name": "amount",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "addStake",
      "args": [
        {
          "name": "txnWithStake",
          "type": "pay"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "burnStake",
      "args": [
        {
          "name": "amountRequested",
          "type": "uint64"
        },
        {
          "name": "receiverBurn",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "snitchBurn",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "issueSnitch",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "getSnitched",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "clawbackStake",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "clawbackStakeToValidator",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "upgradeToNewValidatorVersion",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "flashloan",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "claimLeftAlgo",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "operatorExit",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "closeOutOfApplication",
      "args": [
        {
          "name": "args",
          "type": "any[]"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "goOnline",
      "desc": "Used to set the Contract account online for consensus. Always check that account is online and incentivesEligible before having delegatable stake",
      "args": [
        {
          "name": "feePayment",
          "type": "pay",
          "desc": "Payment transaction to the contract to cover costs for Eligibility fee 0 for renewal."
        },
        {
          "name": "votePK",
          "type": "byte[]",
          "desc": "The vote public key"
        },
        {
          "name": "selectionPK",
          "type": "byte[]",
          "desc": "The selection public key"
        },
        {
          "name": "stateProofPK",
          "type": "byte[]",
          "desc": "the state proof public key"
        },
        {
          "name": "voteFirst",
          "type": "uint64",
          "desc": "Index of first valid block for the participation keys"
        },
        {
          "name": "voteLast",
          "type": "uint64",
          "desc": "Index of last valid block for for the participation keys"
        },
        {
          "name": "voteKeyDilution",
          "type": "uint64",
          "desc": "The vote key dilution value"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "goOffline",
      "desc": "Set the contract account to offline so that it doesn't participate in consensus anymore.\nNo force offline by the protocol. Lookup Delinquency status\nOnce the account is set offline the method ensures that it cannot be delegated to.",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "getEligibilityFlag",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "bool"
      }
    }
  ]
}