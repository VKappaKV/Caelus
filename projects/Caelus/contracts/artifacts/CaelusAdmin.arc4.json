{
  "name": "CaelusAdmin",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "updateApplication",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_createToken",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_updateBoostTokenID",
      "args": [
        {
          "name": "boostTokenID",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_changeBoostTier",
      "args": [
        {
          "name": "amounts",
          "type": "uint64[]"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "getBoostTier",
      "args": [
        {
          "name": "amount",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "uint64"
      }
    },
    {
      "name": "MANAGER_changeManager",
      "args": [
        {
          "name": "manager",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_changeProtocolFee",
      "args": [
        {
          "name": "amount",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_lockContract",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_updatePoolContractCost",
      "args": [
        {
          "name": "validatorPoolContractCost",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_updatePoolContractProgram",
      "args": [
        {
          "name": "programSize",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_writePoolContractProgram",
      "args": [
        {
          "name": "offset",
          "type": "uint64"
        },
        {
          "name": "data",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "addValidator",
      "args": [
        {
          "name": "mbrPay",
          "type": "pay"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "validatorAddedEvent",
          "args": [
            {
              "name": "operator",
              "type": "address"
            },
            {
              "name": "version",
              "type": "uint64"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "mintRequest",
      "args": [
        {
          "name": "mintTxn",
          "type": "pay"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "mintEvent",
          "args": [
            {
              "name": "instant",
              "type": "bool"
            },
            {
              "name": "amount",
              "type": "uint64"
            },
            {
              "name": "output",
              "type": "uint64"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "burnRequest",
      "args": [
        {
          "name": "burnTxn",
          "type": "axfer"
        },
        {
          "name": "burnTo",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "burnEvent",
          "args": [
            {
              "name": "filled",
              "type": "bool"
            },
            {
              "name": "amount",
              "type": "uint64"
            },
            {
              "name": "output",
              "type": "uint64"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "mintValidatorCommit",
      "args": [
        {
          "name": "validatorAppID",
          "type": "uint64"
        },
        {
          "name": "stakeCommit",
          "type": "pay"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "removeValidatorCommit",
      "args": [
        {
          "name": "appToBurnFrom",
          "type": "uint64"
        },
        {
          "name": "amount",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "burnToDelinquentValidator",
      "args": [
        {
          "name": "burnTxn",
          "type": "axfer"
        },
        {
          "name": "validatorAppID",
          "type": "uint64"
        },
        {
          "name": "amountOperator",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "burnEvent",
          "args": [
            {
              "name": "filled",
              "type": "bool"
            },
            {
              "name": "amount",
              "type": "uint64"
            },
            {
              "name": "output",
              "type": "uint64"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "reMintDelinquentCommit",
      "args": [
        {
          "name": "app",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "mintEvent",
          "args": [
            {
              "name": "instant",
              "type": "bool"
            },
            {
              "name": "amount",
              "type": "uint64"
            },
            {
              "name": "output",
              "type": "uint64"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "bid",
      "args": [
        {
          "name": "validatorAppID",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "bidEvent",
          "args": [
            {
              "name": "app",
              "type": "uint64"
            },
            {
              "name": "isHeighest",
              "type": "bool"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "declareRewards",
      "args": [
        {
          "name": "proposer",
          "type": "uint64"
        },
        {
          "name": "block",
          "type": "uint64"
        },
        {
          "name": "rewardPay",
          "type": "pay"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "delegateStake",
      "args": [
        {
          "name": "amount",
          "type": "uint64"
        },
        {
          "name": "validatorAppID",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "snitchToBurn",
      "args": [
        {
          "name": "app",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "snitchQueueEvent",
          "args": [
            {
              "name": "queue",
              "type": "uint64[5]"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "multiSnitchToBurn",
      "args": [
        {
          "name": "apps",
          "type": "uint64[]"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "reStakeFromSnitch",
      "desc": "Follow up operation called by the snitched App to perform restaking of the delegated Algo clawed back",
      "args": [
        {
          "name": "snitchedApp",
          "type": "uint64",
          "desc": "The AppID of the validator to snitch"
        },
        {
          "name": "receiverApp",
          "type": "uint64",
          "desc": "The AppID of the receiver of the delegated Algo"
        },
        {
          "name": "restakeTxn",
          "type": "pay",
          "desc": "The PayTxn following the snitch that sends the delegated Algo to be moved back and restaked"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "makeFlashLoanRequest",
      "args": [
        {
          "name": "payFeeTxn",
          "type": "pay"
        },
        {
          "name": "amounts",
          "type": "uint64[]"
        },
        {
          "name": "appToInclude",
          "type": "uint64[]"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "flashLoanEvent",
          "args": [
            {
              "name": "apps",
              "type": "uint64[]"
            },
            {
              "name": "amounts",
              "type": "uint64[]"
            }
          ],
          "desc": ""
        }
      ]
    },
    {
      "name": "getFLcounter",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "uint64"
      }
    },
    {
      "name": "arc62_get_circulating_supply",
      "readonly": true,
      "args": [
        {
          "name": "assetId",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "uint64"
      }
    }
  ],
  "events": [
    {
      "name": "validatorAddedEvent",
      "args": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "version",
          "type": "uint64"
        }
      ],
      "desc": ""
    },
    {
      "name": "mintEvent",
      "args": [
        {
          "name": "instant",
          "type": "bool"
        },
        {
          "name": "amount",
          "type": "uint64"
        },
        {
          "name": "output",
          "type": "uint64"
        }
      ],
      "desc": ""
    },
    {
      "name": "burnEvent",
      "args": [
        {
          "name": "filled",
          "type": "bool"
        },
        {
          "name": "amount",
          "type": "uint64"
        },
        {
          "name": "output",
          "type": "uint64"
        }
      ],
      "desc": ""
    },
    {
      "name": "bidEvent",
      "args": [
        {
          "name": "app",
          "type": "uint64"
        },
        {
          "name": "isHeighest",
          "type": "bool"
        }
      ],
      "desc": ""
    },
    {
      "name": "snitchQueueEvent",
      "args": [
        {
          "name": "queue",
          "type": "uint64[5]"
        }
      ],
      "desc": ""
    },
    {
      "name": "flashLoanEvent",
      "args": [
        {
          "name": "apps",
          "type": "uint64[]"
        },
        {
          "name": "amounts",
          "type": "uint64[]"
        }
      ],
      "desc": ""
    }
  ]
}